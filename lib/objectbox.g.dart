// GENERATED CODE - DO NOT MODIFY BY HAND
// This code was generated by ObjectBox. To update it run the generator again
// with `dart run build_runner build`.
// See also https://docs.objectbox.io/getting-started#generate-objectbox-code

// ignore_for_file: camel_case_types, depend_on_referenced_packages
// coverage:ignore-file

import 'dart:typed_data';

import 'package:flat_buffers/flat_buffers.dart' as fb;
import 'package:objectbox/internal.dart'
    as obx_int; // generated code can access "internal" functionality
import 'package:objectbox/objectbox.dart' as obx;
import 'package:objectbox_flutter_libs/objectbox_flutter_libs.dart';

import 'ObjectBox/NamesModelTelugu.dart';
import 'ObjectBox/NamesModelTeluguLiked.dart';

export 'package:objectbox/objectbox.dart'; // so that callers only have to import this file

final _entities = <obx_int.ModelEntity>[
  obx_int.ModelEntity(
      id: const obx_int.IdUid(1, 2575178336258568589),
      name: 'NameData',
      lastPropertyId: const obx_int.IdUid(31, 6351211162377682228),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 554988589444997977),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 3803640063055317148),
            name: 'docId',
            type: 9,
            flags: 2048,
            indexId: const obx_int.IdUid(1, 7250842580150328908)),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 3082159135345188576),
            name: 'englishName',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 7556224482895168289),
            name: 'teluguName',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 8052170515144191112),
            name: 'firstLetterEnglish',
            type: 9,
            flags: 2048,
            indexId: const obx_int.IdUid(23, 3670558901675865097)),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 7812827598183989062),
            name: 'firstLetterTelugu',
            type: 9,
            flags: 2048,
            indexId: const obx_int.IdUid(2, 86593971580271955)),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(7, 5366609929440107392),
            name: 'gender',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(9, 8084114296822984049),
            name: 'religion',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(15, 7931885504604488770),
            name: 'isLiked',
            type: 1,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(2, 4750240983097111712),
      name: 'NameDataLiked',
      lastPropertyId: const obx_int.IdUid(30, 6888135905557726594),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 4604792833864215840),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 5618200186274583879),
            name: 'docId',
            type: 9,
            flags: 2048,
            indexId: const obx_int.IdUid(3, 6563269495283179265)),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 165587189170516904),
            name: 'englishName',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 3632841775541426683),
            name: 'teluguName',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 3064330510401718725),
            name: 'firstLetterEnglish',
            type: 9,
            flags: 2048,
            indexId: const obx_int.IdUid(24, 3407156632756609833)),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 5280063413108870374),
            name: 'firstLetterTelugu',
            type: 9,
            flags: 2048,
            indexId: const obx_int.IdUid(4, 5210151339402012397)),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(7, 2699038002734894455),
            name: 'gender',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(9, 3930354658562960408),
            name: 'religion',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(14, 3112366060189258276),
            name: 'isLiked',
            type: 1,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[])
];

/// Shortcut for [obx.Store.new] that passes [getObjectBoxModel] and for Flutter
/// apps by default a [directory] using `defaultStoreDirectory()` from the
/// ObjectBox Flutter library.
///
/// Note: for desktop apps it is recommended to specify a unique [directory].
///
/// See [obx.Store.new] for an explanation of all parameters.
///
/// For Flutter apps, also calls `loadObjectBoxLibraryAndroidCompat()` from
/// the ObjectBox Flutter library to fix loading the native ObjectBox library
/// on Android 6 and older.
Future<obx.Store> openStore(
    {String? directory,
    int? maxDBSizeInKB,
    int? maxDataSizeInKB,
    int? fileMode,
    int? maxReaders,
    bool queriesCaseSensitiveDefault = true,
    String? macosApplicationGroup}) async {
  await loadObjectBoxLibraryAndroidCompat();
  return obx.Store(getObjectBoxModel(),
      directory: directory ?? (await defaultStoreDirectory()).path,
      maxDBSizeInKB: maxDBSizeInKB,
      maxDataSizeInKB: maxDataSizeInKB,
      fileMode: fileMode,
      maxReaders: maxReaders,
      queriesCaseSensitiveDefault: queriesCaseSensitiveDefault,
      macosApplicationGroup: macosApplicationGroup);
}

/// Returns the ObjectBox model definition for this project for use with
/// [obx.Store.new].
obx_int.ModelDefinition getObjectBoxModel() {
  final model = obx_int.ModelInfo(
      entities: _entities,
      lastEntityId: const obx_int.IdUid(2, 4750240983097111712),
      lastIndexId: const obx_int.IdUid(24, 3407156632756609833),
      lastRelationId: const obx_int.IdUid(0, 0),
      lastSequenceId: const obx_int.IdUid(0, 0),
      retiredEntityUids: const [],
      retiredIndexUids: const [
        5649048108201800042,
        5365051892473485330,
        6935112719174333766,
        5245969168447537773,
        7988076563763189424,
        7820233768251387334,
        4171094805083819336,
        7834109387762255198,
        5683197659647601702,
        3444018766442514903,
        2376915862972212352,
        4218348472929770045,
        363968173041652900,
        5301559982830417114,
        7603912793470078577,
        2896701064746587174,
        5584561777333733392,
        8946115622118650805
      ],
      retiredPropertyUids: const [
        8875568885890111180,
        4911248977351714063,
        447245438003669609,
        5448342382136285784,
        3868283936606490388,
        6399450146117847132,
        2697829430674085198,
        3616996243301219247,
        4329060216703749451,
        1097928878195210119,
        3545148422091363480,
        7941994954938462628,
        5563285832349918486,
        6856704569373484994,
        8295124954478173914,
        8913635590231674794,
        4378784154420644824,
        7417793707840454414,
        3863986599323126057,
        6858957756640365426,
        8816066366207757900,
        2055046721343344191,
        4650472215448598937,
        1496064521499386893,
        2615771996206072609,
        7716852755846533976,
        6351211162377682228,
        3980622160522958291,
        6005962474868317354,
        4138999257399309299,
        714422028373967016,
        7913239496745976563,
        6563918148387327993,
        5423384580141960576,
        7336366046739543837,
        8263131165209714817,
        6354670839919949980,
        2787915516242605176,
        1627511894694372247,
        5065369895435912373,
        1607528961777598950,
        3980613265958650563,
        6888135905557726594
      ],
      retiredRelationUids: const [],
      modelVersion: 5,
      modelVersionParserMinimum: 5,
      version: 1);

  final bindings = <Type, obx_int.EntityDefinition>{
    NameData: obx_int.EntityDefinition<NameData>(
        model: _entities[0],
        toOneRelations: (NameData object) => [],
        toManyRelations: (NameData object) => {},
        getId: (NameData object) => object.id,
        setId: (NameData object, int id) {
          object.id = id;
        },
        objectToFB: (NameData object, fb.Builder fbb) {
          final docIdOffset = fbb.writeString(object.docId);
          final englishNameOffset = fbb.writeString(object.englishName);
          final teluguNameOffset = fbb.writeString(object.teluguName);
          final firstLetterEnglishOffset =
              fbb.writeString(object.firstLetterEnglish);
          final firstLetterTeluguOffset =
              fbb.writeString(object.firstLetterTelugu);
          final genderOffset = fbb.writeString(object.gender);
          final religionOffset = fbb.writeString(object.religion);
          fbb.startTable(32);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, docIdOffset);
          fbb.addOffset(2, englishNameOffset);
          fbb.addOffset(3, teluguNameOffset);
          fbb.addOffset(4, firstLetterEnglishOffset);
          fbb.addOffset(5, firstLetterTeluguOffset);
          fbb.addOffset(6, genderOffset);
          fbb.addOffset(8, religionOffset);
          fbb.addBool(14, object.isLiked);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final docIdParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final englishNameParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 8, '');
          final teluguNameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 10, '');
          final firstLetterEnglishParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 12, '');
          final firstLetterTeluguParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 14, '');
          final genderParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 16, '');
          final religionParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 20, '');
          final isLikedParam =
              const fb.BoolReader().vTableGet(buffer, rootOffset, 32, false);
          final object = NameData(
              id: idParam,
              docId: docIdParam,
              englishName: englishNameParam,
              teluguName: teluguNameParam,
              firstLetterEnglish: firstLetterEnglishParam,
              firstLetterTelugu: firstLetterTeluguParam,
              gender: genderParam,
              religion: religionParam,
              isLiked: isLikedParam);

          return object;
        }),
    NameDataLiked: obx_int.EntityDefinition<NameDataLiked>(
        model: _entities[1],
        toOneRelations: (NameDataLiked object) => [],
        toManyRelations: (NameDataLiked object) => {},
        getId: (NameDataLiked object) => object.id,
        setId: (NameDataLiked object, int id) {
          object.id = id;
        },
        objectToFB: (NameDataLiked object, fb.Builder fbb) {
          final docIdOffset = fbb.writeString(object.docId);
          final englishNameOffset = fbb.writeString(object.englishName);
          final teluguNameOffset = fbb.writeString(object.teluguName);
          final firstLetterEnglishOffset =
              fbb.writeString(object.firstLetterEnglish);
          final firstLetterTeluguOffset =
              fbb.writeString(object.firstLetterTelugu);
          final genderOffset = fbb.writeString(object.gender);
          final religionOffset = fbb.writeString(object.religion);
          fbb.startTable(31);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, docIdOffset);
          fbb.addOffset(2, englishNameOffset);
          fbb.addOffset(3, teluguNameOffset);
          fbb.addOffset(4, firstLetterEnglishOffset);
          fbb.addOffset(5, firstLetterTeluguOffset);
          fbb.addOffset(6, genderOffset);
          fbb.addOffset(8, religionOffset);
          fbb.addBool(13, object.isLiked);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final docIdParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final englishNameParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 8, '');
          final teluguNameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 10, '');
          final firstLetterEnglishParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 12, '');
          final firstLetterTeluguParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 14, '');
          final genderParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 16, '');
          final religionParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 20, '');
          final isLikedParam =
              const fb.BoolReader().vTableGet(buffer, rootOffset, 30, false);
          final object = NameDataLiked(
              id: idParam,
              docId: docIdParam,
              englishName: englishNameParam,
              teluguName: teluguNameParam,
              firstLetterEnglish: firstLetterEnglishParam,
              firstLetterTelugu: firstLetterTeluguParam,
              gender: genderParam,
              religion: religionParam,
              isLiked: isLikedParam);

          return object;
        })
  };

  return obx_int.ModelDefinition(model, bindings);
}

/// [NameData] entity fields to define ObjectBox queries.
class NameData_ {
  /// See [NameData.id].
  static final id =
      obx.QueryIntegerProperty<NameData>(_entities[0].properties[0]);

  /// See [NameData.docId].
  static final docId =
      obx.QueryStringProperty<NameData>(_entities[0].properties[1]);

  /// See [NameData.englishName].
  static final englishName =
      obx.QueryStringProperty<NameData>(_entities[0].properties[2]);

  /// See [NameData.teluguName].
  static final teluguName =
      obx.QueryStringProperty<NameData>(_entities[0].properties[3]);

  /// See [NameData.firstLetterEnglish].
  static final firstLetterEnglish =
      obx.QueryStringProperty<NameData>(_entities[0].properties[4]);

  /// See [NameData.firstLetterTelugu].
  static final firstLetterTelugu =
      obx.QueryStringProperty<NameData>(_entities[0].properties[5]);

  /// See [NameData.gender].
  static final gender =
      obx.QueryStringProperty<NameData>(_entities[0].properties[6]);

  /// See [NameData.religion].
  static final religion =
      obx.QueryStringProperty<NameData>(_entities[0].properties[7]);

  /// See [NameData.isLiked].
  static final isLiked =
      obx.QueryBooleanProperty<NameData>(_entities[0].properties[8]);
}

/// [NameDataLiked] entity fields to define ObjectBox queries.
class NameDataLiked_ {
  /// See [NameDataLiked.id].
  static final id =
      obx.QueryIntegerProperty<NameDataLiked>(_entities[1].properties[0]);

  /// See [NameDataLiked.docId].
  static final docId =
      obx.QueryStringProperty<NameDataLiked>(_entities[1].properties[1]);

  /// See [NameDataLiked.englishName].
  static final englishName =
      obx.QueryStringProperty<NameDataLiked>(_entities[1].properties[2]);

  /// See [NameDataLiked.teluguName].
  static final teluguName =
      obx.QueryStringProperty<NameDataLiked>(_entities[1].properties[3]);

  /// See [NameDataLiked.firstLetterEnglish].
  static final firstLetterEnglish =
      obx.QueryStringProperty<NameDataLiked>(_entities[1].properties[4]);

  /// See [NameDataLiked.firstLetterTelugu].
  static final firstLetterTelugu =
      obx.QueryStringProperty<NameDataLiked>(_entities[1].properties[5]);

  /// See [NameDataLiked.gender].
  static final gender =
      obx.QueryStringProperty<NameDataLiked>(_entities[1].properties[6]);

  /// See [NameDataLiked.religion].
  static final religion =
      obx.QueryStringProperty<NameDataLiked>(_entities[1].properties[7]);

  /// See [NameDataLiked.isLiked].
  static final isLiked =
      obx.QueryBooleanProperty<NameDataLiked>(_entities[1].properties[8]);
}
